define(["require","common/Class","common/ui/Dialog","common/platform/LifeCycleContainer","common/lib/Promise","common/Exception","common/lib/Queue","common/MCDEventSource","common/MCDEvent","common/lib/Paths","common/lib/Injector","common/ui/Pane","common/platform/PlatformWorkerRequestCommand","common/lib/ModuleRouter","common/lib/OCMLParser","common/FocusTarget","common/worker/WorkerRequest","common/Context"],function(require){"use strict";var Class=require("common/Class"),Dialog=require("common/ui/Dialog"),LifeCycleContainer=require("common/platform/LifeCycleContainer"),Promise=require("common/lib/Promise"),Exception=require("common/Exception"),Queue=require("common/lib/Queue"),MCDEventSource=require("common/MCDEventSource"),MCDEvent=require("common/MCDEvent"),Paths=require("common/lib/Paths"),Injector=require("common/lib/Injector"),Pane=require("common/ui/Pane"),PlatformWorkerRequestCommand=require("common/platform/PlatformWorkerRequestCommand"),ModuleRouter=require("common/lib/ModuleRouter"),OCMLParser=require("common/lib/OCMLParser"),FocusTarget=require("common/FocusTarget"),WorkerRequest=require("common/worker/WorkerRequest"),Context=require("common/Context"),ModuleView=Class.create(LifeCycleContainer,{initialize:function(context,config,focusController){this._context=context,this._view=document.body,this._appName=config.name,this._appId=config.id,this._appIcon=config.icon,this._focusController=focusController,this._setBackTrap(),this.screensHistory=[],this._breadcrumbType=ModuleView.BreadcrumbType.Layout},_setBackTrap:function(){this._focusController.addMCDEventListener(MCDEvent.EventType.BACK,this._handleMCDEvents.bind(this))},"goto":function(viewId,parameters,saveHistory){var screen,chamber=this._getChamberConfig(viewId);chamber?screen=getScreenByChamberId.call(this,viewId):(screen=getScreen.call(this,viewId),chamber=screen&&getFocusedChamber.call(this,screen),chamber||screen&&screen.chambers.length&&(chamber=screen.chambers[0]));if(!chamber)throw new Exception("Asked for a screen that has no chambers");if(this.screensHistory.length&&screen.id===this.screensHistory[this.screensHistory.length-1])return this.resume(viewId,parameters);var promise=new Promise;return chamber.focus||setChamberFocus(screen,chamber.id),this._currentScreen&&this._currentScreen.id===screen.id?promise.bind(Promise.wrap(activateScreen(screen,parameters)).then(function(){return Promise.wrap(focus(screen))}.bind(this))):(this._currentScreen&&(saveHistory===undefined||saveHistory===!0)&&this.screensHistory.push(this._currentScreen.id),promise.bind(goto.call(this,screen,parameters))),promise},getScreenHistory:function(){return this.screensHistory},setScreenHistory:function(history){history=history||[],Array.isArray(history)||(history=[history]),this.screensHistory=history},resume:function(viewId,parameters){if(this.screensHistory.length){var lastIndexOfId=this.screensHistory.lastIndexOf(viewId);this.screensHistory.splice(lastIndexOfId,1)}return this.goto(viewId,parameters,!1)},_handleMCDEvents:function(e){this.__ignoreKeys&&(e.preventDefault(),e.stopPropagation()),this.screensHistory.length&&(goto.call(this,getScreen.call(this,this.screensHistory.pop()),{}),e.preventDefault(),e.stopPropagation())},exit:function(){this.screensHistory=[],(new MCDEventSource(this._focusController)).dispatchEvent(new MCDEvent(MCDEvent.EventType.BACK,!1))},isChamberDefined:function(chamberId){return!!this._getChamberConfig(chamberId)},_getChamberConfig:function(chamberId){var screen,chamber,i,j,screens=this.getScreens(),x,y;for(i=0,j=screens.length;i<j;i++){screen=screens[i];for(x=0,y=screen.chambers.length;x<y;x++){chamber=screen.chambers[x];if(chamber.id===chamberId)return chamber}}},loadChamber:function(chamberId){return this._loadChamber(chamberId)},_loadChamber:function(chamberId){var promise=new Promise;return buildChamberFromConfig.call(this,this._getChamberConfig(chamberId),getScreenByChamberId.call(this,chamberId)).done(function(){promise.resolve(this.getChamber(chamberId))}.bind(this)),promise},getChamber:function(chamberId,silent){var screen,chamber,i,j,screens=this.getScreens(),x,y,matchedChamber,matchedChambers;this._currentScreen?matchedChambers=this._currentScreen.chambers.filter(function(chamber){return chamber.id===chamberId}):matchedChambers=[];if(matchedChambers.length===1)matchedChamber=matchedChambers[0].instance;else{for(i=0,j=screens.length;i<j;i++){screen=screens[i];for(x=0,y=screen.chambers.length;x<y;x++){chamber=screen.chambers[x];if(chamber.id===chamberId){matchedChamber=chamber.instance;break}}if(matchedChamber)break}!matchedChamber&&!silent&&Log.error("requested chamber with id ",chamberId," does not exist")}return matchedChamber},getCurrentScreen:function(){return this._currentScreen},beforeStart:function(){if(this._currentScreen)return callScreenMethod.call(this,this._currentScreen,"beforeStart")}.override(),started:function(dataToStartingChamber){if(this._currentScreen){var allStartedPromise=callScreenMethod.call(this,this._currentScreen,"started");return allStartedPromise.then(function(){return Promise.wrap(activateScreen(this._currentScreen,dataToStartingChamber))}.bind(this)).done(function(){focus(this._currentScreen)}.bind(this)),allStartedPromise}}.override(),__postStarted:function(){if(this.getView().querySelectorAll("[tabindex]").length===0){var span=document.createElement("span");span.classList.add("dummy-focus"),document.body.appendChild(span);var dummyFocusTarget=new FocusTarget(span);dummyFocusTarget.setFocusController(this._focusController),window.setFocusedItem(dummyFocusTarget)}},beforePause:function(){return runLifeCycleTasks.call(this,"beforePause","beforeAppPause")}.override(),paused:function(){Dialog.stopLastShowing();if(this._currentScreen)return callScreenMethod.call(this,this._currentScreen,"paused")}.override(),beforeResume:function(){return runLifeCycleTasks.call(this,"beforeResume","beforeAppResume")}.override(),resumed:function(){if(this._currentScreen){var allResumedPromise=callScreenMethod.call(this,this._currentScreen,"resumed");return allResumedPromise.done(function(){focus(this._currentScreen)}.bind(this)),allResumedPromise}}.override(),beforeStop:function(){if(this._currentScreen)return callScreenMethod.call(this,this._currentScreen,"beforeStop")}.override(),stopped:function(){if(this._currentScreen)return callScreenMethod.call(this,this._currentScreen,"stopped")}.override(),setHash:function(hash){this._router.load(hash)},showLoading:function(type){var params=type?[type]:[];return(new WorkerRequest({command:PlatformWorkerRequestCommand.SHOW_LOADING,params:params})).send(this._context.getConnection())},hideLoading:function(){return(new WorkerRequest({command:PlatformWorkerRequestCommand.HIDE_LOADING})).send(this._context.getConnection())},returnToTop:function(e){}.hidden(),getContext:function(){return this._context}.hidden(),initPlugins:function(extensions){this.extensions=extensions}.hidden(),initScreens:function(screens){this.screens=screens;var autorunTasks=[],screen,chamber,view,chamberView,promise=new Promise;if(screens)if(ensureUniqueIds(screens)){this._modulesWrapper=document.createElement("div"),this._modulesWrapper.className="oc-screens-wrapper",this._view.appendChild(this._modulesWrapper);for(var i=0,j=screens.length;i<j;i++){screen=screens[i],view=buildView.call(this,screen);if(screen.chambers.length)for(var x=0,y=screen.chambers.length;x<y;x++)chamber=screen.chambers[x],chamber.autorun&&chamber.autorun===!0&&(chamberView=buildChamberView.call(this,view,chamber.id),autorunTasks.push(buildChamber.call(this,chamberView,chamber,view))),chamber.focus&&chamber.focus===!0&&this._currentScreen===undefined&&(this._currentScreen=screen)}autorunTasks.length?promise.bind(Promise.whenAll.apply(this,autorunTasks)):promise.resolve()}else promise.reject("Screen or Chamber id's are not unique");else promise.resolve();return this._currentScreen=this._setStartScreen(this._currentScreen),promise}.hidden(),_buildSingleView:function(){var modulesWrapper=document.createElement("div");modulesWrapper.className="oc-screens-wrapper",this._view.appendChild(modulesWrapper);var fragmentWrapper=document.querySelector(".fragment-wrapper");if(fragmentWrapper)fragmentWrapper.classList.remove("fragment-wrapper"),fragmentWrapper.classList.add("oc-screen"),modulesWrapper.appendChild(fragmentWrapper),this._view=fragmentWrapper;else{var singleView=document.createElement("div");singleView.className="oc-screen",modulesWrapper.appendChild(singleView),this._view=singleView}},_setStartScreen:function(current){return current}.stub(),getExtensions:function(){return this.extensions}.hidden(),getScreens:function(){return this.screens}.hidden(),_instantiateRouter:function(hash,params){Object.defineProperty(this,"_router",{value:new ModuleRouter(Context.current().getConnection(),hash,params)})}.hidden(),getRouter:function(){return this._router}.hidden(),getSystemStateValue:function(key){return oc.states.systemState[key]}.hidden(),setController:function(controller){return this._controller=controller,Object.freeze(this._controller),this}.hidden(),getController:function(){if(!this._controller)throw"Cannot find Controller.  Did you declare it in the manifest?";return this._controller}.hidden(),getView:function(){return this._view}.hidden()}),chamberClosure=function(chamber,parameters,queue,screen){chamber.instance?queue.enqueue(function(){return runLifeCyclesHelper.call(this,chamber,screen,parameters)}.bind(this)):(queue.enqueue(function(){return buildChamberFromConfig.call(this,chamber,screen).done(function(){chamber.autorun=!0}.bind(this))}.bind(this)),queue.enqueue(function(){return runLifeCyclesHelper.call(this,chamber,screen,parameters)}.bind(this)))},goto=function(screen,parameters){var queue=new Queue,promise=new Promise;this._currentScreen&&(disableFocus(this._currentScreen),queue.enqueue(function(){return Promise.wrap(callScreenMethod.call(this,this._currentScreen,"beforePause")).then(function(){return callScreenMethod.call(this,this._currentScreen,"paused")}.bind(this))}.bind(this)));var chambers=screen.chambers,chamber;for(var i=0,j=chambers.length;i<j;i++)chamber=chambers[i],chamberClosure.call(this,chamber,parameters,queue,screen);return queue.enqueue(function(){return promise.resolve()}),promise},getFocusedChamber=function(screen){var chambers=screen.chambers,chamber;for(var i=0,j=chambers.length;i<j;i++){chamber=chambers[i];if(chamber.focus&&chamber.focus===!0)return chamber}},getScreen=function(screenId){var screens=this.getScreens(),screen;if(screens&&screens.length)for(var i=0,j=screens.length;i<j;i++){screen=screens[i];if(screen.id===screenId)return screen}},getScreenByChamberId=function(chamberId){var screens=this.getScreens(),screen,chamber;for(var i=0,j=screens.length;i<j;i++){screen=screens[i];for(var x=0,y=screen.chambers.length;x<y;x++){chamber=screen.chambers[x];if(chamber.id===chamberId)return screen}}},ensureUniqueIds=function(screens){var i,j,screen,x,y,chamber,screenIds={},chamberIds={};for(i=0,j=screens.length;i<j;i++){screen=screens[i];if(!!screenIds[screen.id])return!1;screenIds[screen.id]=screen.id;for(x=0,y=screen.chambers.length;x<y;x++){chamber=screen.chambers[x];if(!!chamberIds[chamber.id])return!1;chamberIds[chamber.id]=chamber.id}}return!0},runLifeCycleTasks=function(chamberLifeCycle,appLifeCycle){var tasks=[];return this._currentScreen&&tasks.push(callScreenMethod.call(this,this._currentScreen,chamberLifeCycle)),this.getScreens()&&this.getScreens().length&&tasks.concat(this.getScreens().map(function(screen){return callScreenMethod.call(this,screen,appLifeCycle)}.bind(this))),tasks.length?Promise.whenAll.apply(this,tasks):(new Promise).resolve()},focus=function(screen){var chambers=screen.chambers,focusFilter=chambers.filter(function(chamber){return chamber.focus&&chamber.focus===!0});focusFilter.length&&focusFilter[0].instance&&focusFilter[0].instance.focusDefault.call(focusFilter[0].instance)},activateScreen=function(screen,parameters){var chambers=screen.chambers,focusFilter=chambers.filter(function(chamber){return chamber.focus&&chamber.focus===!0});if(focusFilter.length&&focusFilter[0].instance)return focusFilter[0].instance.activate.call(focusFilter[0].instance,parameters)},runLifeCycles=function(chamber){return chamber.instance.initialized?Promise.wrap(callChamberMethod.call(this,chamber,"beforeResume")).then(function(){return callChamberMethod.call(this,chamber,"resumed")}):Promise.wrap(callChamberMethod.call(this,chamber,"beforeStart")).then(function(){return callChamberMethod.call(this,chamber,"started")})},runLifeCyclesHelper=function(chamber,screen,parameters){var p=runLifeCycles.call(this,chamber);return chamber.focus&&chamber.focus===!0?p.then(function(){return Promise.wrap(activateScreen(screen,parameters))}).then(function(){return this._currentScreen=screen,Promise.wrap(focus(screen))}.bind(this)):p},setChamberFocus=function(screen,chamberId){var chambers=screen.chambers,chamber;for(var i=0,j=chambers.length;i<j;i++)chamber=chambers[i],chamber.id!==chamberId?chamber.focus=!1:chamber.focus=!0},callScreenMethod=function(screen,method){var chambers=screen.chambers,tasks=chambers.map(function(chamber){return chamber.instance?Promise.wrap(chamber.instance[method].call(chamber.instance)):(new Promise).resolve()});return Promise.whenAll.apply(this,tasks)},callChamberMethod=function(chamber,method){return Promise.wrap(chamber.instance[method].call(chamber.instance))},buildView=function(view){var moduleView=document.createElement("div");return moduleView.id=view.id,moduleView.className="oc-screen",this._modulesWrapper.appendChild(moduleView),moduleView},buildChamberView=function(view,id){var chamberView=document.createElement("div");return chamberView.id=id,chamberView.className="oc-chamber",view.appendChild(chamberView),chamberView},disableFocus=function(screen){var chambers=screen.chambers,chamber;for(var i=0,j=chambers.length;i<j;i++)chamber=chambers[i],chamber.instance&&chamber.instance.screen.setChildrenAsNotFocusable()},buildChamberFromConfig=function(chamber,screen){var promise=new Promise,screenView=document.getElementById(screen.id),chamberView=buildChamberView.call(this,screenView,chamber.id);return promise.bind(buildChamber.call(this,chamberView,chamber,screenView)),promise},buildChamber=function(view,chamber,screenView){var promise=new Promise,launcherPath=Paths.expand(window.MODULE_PATH,chamber.js),templatePath,templatePromise,cssPath,container=(new Pane({id:chamber.id,focusable:!1,childrenFocusable:!1})).render(screenView);container.setChildrenAsNotFocusable();var chamberRequires=[launcherPath];return chamber.buttons&&!Array.isArray(chamber.buttons)&&chamberRequires.push("text!"+Paths.expand(window.MODULE_PATH,chamber.buttons)),require(chamberRequires,function(LauncherView,chamberConfig){chamberConfig&&(chamber.buttons=JSON.parse(chamberConfig)),LauncherView||Log.error("Launcher view is undefined in buildChamber",chamber),chamber.instance=new LauncherView(this,chamber);if(chamber.instance.template||chamber.template){var ocmlParser=new OCMLParser(this);this._moduleView=this;var templatePaths=[];chamber.instance.template&&(templatePath=Paths.expand(window.MODULE_PATH,chamber.instance.template),templatePaths.push(templatePath)),chamber.template&&(templatePath=Paths.expand(window.MODULE_PATH,chamber.template),templatePaths.push(templatePath)),templatePaths.length&&(templatePromise=ocmlParser.loadTemplateToDOM.call(ocmlParser,templatePaths,view))}else templatePromise=new Promise,templatePromise.resolve();cssPath=[],chamber.instance.css&&(cssPath=cssPath.concat(chamber.instance.css)),chamber.css&&(cssPath=cssPath.concat(chamber.css));if(cssPath.length){var css=[];Array.isArray(cssPath)?css=css.concat(cssPath.map(function(path){return Paths.expand(window.MODULE_PATH,path)})):css=css.concat(Paths.expand(window.MODULE_PATH,cssPath)),css.length&&Injector.injectStyle(css).error(function(){var failed=[],href;Array.prototype.slice.call(arguments).forEach(function(failedElement){failedElement&&failedElement.tagName==="LINK"&&(href=failedElement&&failedElement.getAttribute("href"),failed.push(href.replace(window.MODULE_PATH,"")))}),Log.warn("The following stylesheets failed to load: "+failed.join(","))})}templatePromise.done(function(){var initResult=chamber.instance.init(container);initResult&&Promise.isPromise(initResult)?promise.bind(initResult):promise.resolve()}.bind(this)),templatePromise.error(function(){promise.reject(arguments)})}.bind(this)),promise};return Class.final(ModuleView.prototype,"setController"),Class.final(ModuleView.prototype,"getController"),Class.final(ModuleView.prototype,"getView"),Class.final(ModuleView.prototype,"_instantiateRouter"),Class.final(ModuleView.prototype,"getRouter"),Class.final(ModuleView.prototype,"getSystemStateValue"),ModuleView.BreadcrumbType={None:"none",Layout:"layout",Overlay:"overlay"},ModuleView});